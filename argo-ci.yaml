apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: mls-ci-
  namespace: argo
spec:
  entrypoint: ci
  volumes:
  - name: docker-config
    secret: 
      secretName: docker-config
  arguments:
    parameters:
    - name: repo
      value: https://github.com/vishal-wiai/ci.git
    - name: revision
      value:  771d6e3 #master
    - name: image-name-backend
      value: docker.io/thevishalagarwal/mls
  
  templates:
  - name: ci
    dag:
      tasks:
      - name: checkout
        template: checkout
      - name: build-push-docker
        dependencies: [checkout]
        template: build-push-docker
        arguments:
          artifacts: [{name: git-repo, from: "{{tasks.checkout.outputs.artifacts.source}}"}]
          parameters: [{name: image-tag, value: "{{tasks.checkout.outputs.parameters.tag}}"}]
      - name: integration-test
        dependencies: [build-push-docker]
        template: integration-test
        arguments:
          parameters: [{name: image-tag, value: "{{tasks.checkout.outputs.parameters.tag}}"}]
      - name: training
        dependencies: [integration-test]
        template: training
        arguments:
          parameters: [{name: image-tag, value: "{{tasks.checkout.outputs.parameters.tag}}"}]
      - name: evaluation
        dependencies: [training]
        template: evaluation
        arguments:
          parameters: [{name: image-tag, value: "{{tasks.checkout.outputs.parameters.tag}}"}]

  - name: checkout
    inputs:
      artifacts:
      - name: git-repo
        path: /src
        git:
          repo: "{{workflow.parameters.repo}}"
          revision: "{{workflow.parameters.revision}}"
    container:
      image: alpine/git
      command: [sh, -c]
      args: ["cd /src && ls -l && git rev-parse --short HEAD > /tmp/git-commit"]
    outputs:
      artifacts:
      - name: source
        path: /src
      parameters:
      - name: tag
        valueFrom:
          path: /tmp/git-commit

  - name: build-push-docker
    inputs:
      artifacts:
      - name: git-repo
        path: /src
      parameters:
      - name: image-tag
    container:
      image: docker:18.09
      workingDir: /src
      command: [sh, -c]
      args: ["until docker ps; do sleep 1; done; cd /src \ 
        && docker build . -t {{workflow.parameters.image-name-backend}}:{{inputs.parameters.image-tag}} && docker push {{workflow.parameters.image-name-backend}}:{{inputs.parameters.image-tag}}"]
      env:
      - name: DOCKER_HOST
        value: 127.0.0.1
      - name: DOCKER_CONFIG
        value: /.docker
      volumeMounts:
      - name: docker-config
        mountPath: /.docker
    sidecars:
    - name: docker-in-docker
      image: docker:18.09-dind
      securityContext:
        privileged: true
      mirrorVolumeMounts: true

  - name: integration-test
    inputs:
      parameters:
      - name: image-tag
    container:
      image: "{{workflow.parameters.image-name-backend}}:{{inputs.parameters.image-tag}}"
      command: [sh, -c]
      args: ["python /src/tests/integration.py"]

  - name: training
    inputs:
      parameters:
      - name: image-tag
    container:
      image: "{{workflow.parameters.image-name-backend}}:{{inputs.parameters.image-tag}}"
      command: [sh, -c]
      args: ["python /src/train.py"]

  - name: evaluation
    inputs:
      parameters:
      - name: image-tag
    container:
      image: "{{workflow.parameters.image-name-backend}}:{{inputs.parameters.image-tag}}"
      command: [sh, -c]
      args: ["python /src/eval.py"]